\inc "math"

\inc "color"
\inc "interval"

@linear_to_gamma(linear_component: flt64): flt64 {
    if (linear_component > 0)
        ret sqrt(linear_component);
    ret 0;
}

intensity: interval = interval(0.000, 0.999);
@toint(col: color): int32 {
    r: flt64 = col.x;
    g: flt64 = col.y;
    b: flt64 = col.z;

    ## Apply a linear to gamma transform for gamma 2
    r = linear_to_gamma(r);
    g = linear_to_gamma(g);
    b = linear_to_gamma(b);

    ## Translate the [0,1] component values to the byte range [0,255].
    rbyte: int32 = 256 * intensity.clamp(r);
    gbyte: int32 = 256 * intensity.clamp(g);
    bbyte: int32 = 256 * intensity.clamp(b);

    ## Merge components into 24 bit color
    ret 0xff << 24 | (rbyte & 0xff) << 16 | (gbyte & 0xff) << 8 | (bbyte & 0xff);
}
