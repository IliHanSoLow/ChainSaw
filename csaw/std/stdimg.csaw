## STDIMG ##

def image {
    width: int32,
    height: int32,
    buffer: int32*
}

$image(width: int32, height: int32) {
    me!width = width;
    me!height = height;
    me!buffer = malloc([int64]4 * width * height);
}

@pixel:image(x: int32, y: int32, color: int32) = me!buffer[x + y * me!width] = color;

@pixels:image(pixels: int32*, offset: int32, stride: int32, x: int32, y: int32, width: int32, height: int32) {
    i: int32;
    j: int32;

    for (j = 0; j < width; ++j)
        for (i = 0; i < height; ++i)
            me!buffer[(i + x) + (j + y) * me!width]
                = pixels[offset + i + j * stride];
}

@toppm:image(filename: int8*) {
    stream: FILE*;
    i: int32;
    c: int32;

    stream = fopen(filename, "wb");
    fprintf(stream, "P6\n%d %d\n255\n", me!width, me!height);
    for (i = 0; i < me!width * me!height; ++i)
    {
        c = me!buffer[i];
        fprintf(stream, "%c%c%c", (c >> 16) & 0xff, (c >> 8) & 0xff, c & 0xff);
    }
    fclose(stream);
}

@destroy:image = free([void*]me!buffer);
