\inc "complex.csaw"

num MAX_ITER =  10;
num SAMPLES  =   1;
num WIDTH    =  10;
num HEIGHT   = WIDTH;

@main: num {

    num xc = num(readf("xc: "));     ## -0.5
    num yc = num(readf("yc: "));     ##    0
    num size = num(readf("size: ")); ##    2

    img output = img(WIDTH, HEIGHT);
	
    for (num j = 0; j < HEIGHT; j++) {
        for (num i = 0; i < WIDTH; i++) {
            num n = 0;
            for (num s = 0; s < SAMPLES; s++) {
                num x0 = xc - size / 2 + size * (i + random()) / WIDTH;
                num y0 = yc - size / 2 + size * (j + random()) / HEIGHT;
                complex z0 = complex();
				z0.real = x0;
				z0.imaginary = y0;
				printf("[{}]", str(z0));
                n += mandel(z0, MAX_ITER);
            }
            n /= (SAMPLES * MAX_ITER);
            num grey = floor(n * 255.999);
            output.set(i, j, (0xff << 24) | (grey << 16) | (grey << 8) | grey);
        }
		printf("\n");
    }
	
    output.write("png", "mandel.png");
    ret 0;
}

@mandel(z0: complex, max: num): num {
    complex z = z0;
	num t = 0;
    for (; (t < max) && (z.abs() <= 2.0); t++)
        z = z.square() + z0;
    ret t;
}
