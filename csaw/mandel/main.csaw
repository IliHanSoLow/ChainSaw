\inc "complex.csaw"

MAX_ITER: num =    10;
SAMPLES:  num =     1;
WIDTH:    num =    10;
HEIGHT:   num = WIDTH;

@main::num {

    xc:   num =   num(readf("xc: "));	## -0.5
    yc:   num =   num(readf("yc: "));	##    0
    size: num = num(readf("size: "));	##    2

    output: img = img(WIDTH, HEIGHT);
	
    for (j: num = 0; j < HEIGHT; j++) {
        for (i: num = 0; i < WIDTH; i++) {
            n: num = 0;
            for (s: num = 0; s < SAMPLES; s++) {
				x0: num = xc - size / 2 + size * (i + random()) /  WIDTH;
                y0: num = yc - size / 2 + size * (j + random()) / HEIGHT;
                z0: complex = complex();
				z0.real = x0;
				z0.imaginary = y0;
				printf("[{}]", str(z0));
                n += mandel(z0, MAX_ITER);
            }
            n /= (SAMPLES * MAX_ITER);
            grey: num = floor(n * 255.999);
            output.set(i, j, (0xff << 24) | (grey << 16) | (grey << 8) | grey);
        }
		printf("\n");
    }
	
    output.write("png", "mandel.png");
    ret 0;
}

@mandel(z0: complex, max: num):num {
    z: complex = z0;
	t: num = 0;
    for (; (t < max) && (z.abs() <= 2.0); t++)
        z = z.square() + z0;
    ret t;
}
